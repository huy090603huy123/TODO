import React, { useState } from 'react';
import { useAppDispatch } from '../hooks';
import { toggleComplete, deleteTodo, editTodo } from '../features/todo/todoSlice';

const TodoItem = ({ todo }) => {
  const [isEditing, setIsEditing] = useState(false);
  const [editText, setEditText] = useState(todo.text);
  const dispatch = useAppDispatch();

  const handleEdit = () => {
    if (editText.trim()) {
      dispatch(editTodo({ id: todo.id, text: editText.trim() }));
      setIsEditing(false);
    }
  };

  const handleKeyPress = (e) => {
    if (e.key === 'Enter') {
      handleEdit();
    } else if (e.key === 'Escape') {
      setEditText(todo.text);
      setIsEditing(false);
    }
  };

  return (
    <div className="todo-item">
      <div
        className={`todo-content ${todo.completed ? 'completed' : ''}`}
        onDoubleClick={() => setIsEditing(true)}
      >
        {isEditing ? (
          <input
            type="text"
            value={editText}
            onChange={(e) => setEditText(e.target.value)}
            onKeyDown={handleKeyPress}
            onBlur={handleEdit}
            autoFocus
            style={{
              width: '100%',
              border: 'none',
              outline: 'none',
              background: 'transparent',
              fontSize: '16px',
              color: '#495057'
            }}
          />
        ) : (
          todo.text
        )}
      </div>

      {!todo.completed ? (
        <button
          className="todo-btn btn-finish"
          onClick={() => dispatch(toggleComplete(todo.id))}
          title="Mark as completed"
        >
          <svg width="18" height="18" viewBox="0 0 24 18" fill="none">
            <path d="M2.36317 9.67506C1.55939 9.47449 0.745204 9.96348 0.544629 10.7673C0.344054 11.571 0.833047 12.3852 1.63683 12.5858L2.36317 9.67506ZM8.15873 16L6.78041 16.5918C7.03098 17.1754 7.62195 17.5379 8.25575 17.4969C8.88954 17.4558 9.42877 17.02 9.60191 16.4089L8.15873 16ZM22.3261 3.46413C23.1347 3.28406 23.6442 2.48257 23.4641 1.67395C23.2841 0.865328 22.4826 0.355779 21.6739 0.535866L22.3261 3.46413ZM1.63683 12.5858C2.02764 12.6833 3.12299 13.151 4.27778 13.9426C5.43988 14.7393 6.38906 15.6803 6.78041 16.5918L9.53705 15.4082C8.81094 13.7171 7.30157 12.3783 5.97406 11.4682C4.63927 10.5532 3.21399 9.88738 2.36317 9.67506L1.63683 12.5858ZM9.60191 16.4089C10.1359 14.5244 11.4948 11.6585 13.6727 9.06395C15.8445 6.47675 18.7417 4.26235 22.3261 3.46413L21.6739 0.535866C17.2583 1.5192 13.8275 4.21342 11.3749 7.13514C8.92852 10.0495 7.36674 13.2929 6.71555 15.5911L9.60191 16.4089ZM2.90037 10.0721C3.88228 9.24742 5.29636 8.09033 6.64379 6.83001C7.97664 5.58352 9.34587 4.14458 10.2004 2.72026L7.79938 1.27974C7.15402 2.35542 6.02331 3.57663 4.73118 4.78513C3.45364 5.97998 2.11772 7.07289 1.09963 7.92793L2.90037 10.0721Z" fill="white"/>
          </svg>
        </button>
      ) : (
        <button
          className="todo-btn btn-unfinish"
          onClick={() => dispatch(toggleComplete(todo.id))}
          title="Mark as incomplete"
        >
          <svg width="18" height="18" viewBox="0 0 24 18" fill="none">
            <path d="M7.34798 2.65792C7.71134 1.91344 7.40238 1.01535 6.6579 0.65199C5.91342 0.28863 5.01533 0.59759 4.65197 1.34207L7.34798 2.65792ZM1.526 9.08333L0.375571 8.12078C0.0779516 8.47649 -0.038382 8.94987 0.0604612 9.40301C0.159304 9.85615 0.462206 10.2381 0.880924 10.4375L1.526 9.08333ZM14.5724 16.5893C14.3456 17.386 14.8076 18.2158 15.6044 18.4426C16.4012 18.6694 17.231 18.2074 17.4578 17.4106L14.5724 16.5893ZM6.25192 14.3321C6.71145 15.0213 7.64276 15.2076 8.33205 14.7481C9.02134 14.2886 9.2076 13.3572 8.74808 12.6679L6.25192 14.3321ZM4.65197 1.34208C3.6766 3.34047 2.60033 5.04525 1.76658 6.25108C1.35059 6.85272 0.997263 7.32685 0.750384 7.64762C0.627005 7.80793 0.530392 7.9297 0.466047 8.00969C0.43388 8.04969 0.409796 8.0792 0.394482 8.09786C0.386826 8.10718 0.381364 8.11379 0.378182 8.11763C0.376591 8.11955 0.375572 8.12078 1.526 9.08333C2.67643 10.0459 2.67658 10.0457 2.67673 10.0455C2.6768 10.0454 2.67696 10.0452 2.67709 10.0451C2.67735 10.0448 2.67765 10.0444 2.67798 10.044C2.67865 10.0432 2.67946 10.0423 2.68042 10.0411C2.68234 10.0387 2.68486 10.0358 2.68798 10.032C2.69422 10.0244 2.7025 10.0143 2.71282 10.0013C2.73346 9.97533 2.76283 9.93792 2.80362 9.89008C2.8852 9.7944 3.00206 9.65556 3.12778 9.47738C3.40201 9.12106 3.78587 8.60562 4.23417 7.95725C5.129 6.66308 6.28972 4.8262 7.34798 2.65792L4.65197 1.34208ZM2.04704 10.4899C3.77617 9.84942 5.73319 9.17231 7.638 8.72137C9.57008 8.26399 11.3025 8.07631 12.6288 8.3017C13.8752 8.51352 14.6284 9.05001 15.0163 10.0405C15.4628 11.1807 15.5383 13.1956 14.5724 16.5893L17.4578 17.4106C18.4843 13.8042 18.6166 11.0067 17.8097 8.94646C16.9442 6.73634 15.1337 5.68437 13.1314 5.34411C11.2092 5.01743 9.00799 5.31413 6.9469 5.80206C4.85856 6.29644 2.76283 7.02558 1.00496 7.67673L2.04704 10.4899ZM8.74808 12.6679C7.52312 10.8305 5.22934 9.18593 2.17108 7.72913L0.880924 10.4375C3.77066 11.8141 5.47688 13.1695 6.25192 14.3321L8.74808 12.6679Z" fill="white"/>
          </svg>
        </button>
      )}

      <button
        className="todo-btn btn-delete"
        onClick={() => dispatch(deleteTodo(todo.id))}
        title="Delete todo"
      >
        <svg width="18" height="18" viewBox="0 0 18 18" fill="none">
          <path fillRule="evenodd" clipRule="evenodd" d="M15.0993 17.7597C15.7949 18.2098 16.7235 18.0108 17.1736 17.3152C17.6236 16.6197 17.4246 15.6911 16.7291 15.241C13.3079 13.0273 10.8209 10.9959 8.92251 9.03739C9.09742 8.84982 9.27291 8.66571 9.44888 8.48534C11.8864 5.98692 14.2472 4.38066 16.2944 3.97122C17.1067 3.80875 17.6335 3.01852 17.4711 2.20618C17.3086 1.39384 16.5184 0.867013 15.706 1.02949C12.7532 1.62001 9.86406 3.76379 7.30154 6.39037C7.18151 6.5134 7.06181 6.63789 6.94249 6.76375C5.42001 4.80433 4.37058 2.87632 3.42591 0.863164C3.07399 0.113202 2.18073 -0.209475 1.43077 0.142444C0.680809 0.494363 0.358132 1.38762 0.710051 2.13758C1.82089 4.50481 3.07899 6.76511 4.92932 9.05306C3.22206 11.1341 1.62669 13.4328 0.222723 15.7142C-0.211453 16.4197 0.00852752 17.3437 0.714064 17.7778C1.4196 18.2119 2.34352 17.992 2.7777 17.2865C4.04819 15.222 5.46405 13.1726 6.95559 11.3168C8.985 13.3765 11.5959 15.4928 15.0993 17.7597Z" fill="white"/>
        </svg>
      </button>
    </div>
  );
};

export default TodoItem; 